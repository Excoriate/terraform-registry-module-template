---
name: Terraform Plan on PR

on:
    pull_request:
        types: [opened, edited, synchronize]

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: us-east-1

jobs:
    ci:
        name: CI - Recipes on PR
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: basic
                      module: default
                      tf_version: 1.3.6

        defaults:
            run:
                working-directory: examples/${{ matrix.module }}/${{ matrix.name }}

        steps:
            - uses: actions/checkout@v2
            - uses: hashicorp/setup-terraform@v1
              with:
                  terraform_version: ${{ matrix.tf_version }}
            - run: terraform init

            - name: Terraform TFLintSetup
              id: terraform-tflint-setup
              uses: terraform-linters/setup-tflint@v1
              with:
                  tflint_version: latest

            - name: TFLint Run
              id: terraform-tflint-run
              run: |
                  tflint --version
                  tflint --init
                  tflint --disable-rule=terraform_module_pinned_source
                  tflint .

            - run: terraform plan -var-file=config/fixtures.tfvars


    plan-pr:
        name: Plan recipes on PR
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: basic
                      module: default
                      tf_version: 1.3.6

        defaults:
            run:
                working-directory: examples/${{ matrix.module }}/${{ matrix.name }}

        steps:
            - uses: actions/checkout@v2
            - uses: hashicorp/setup-terraform@v1
              with:
                  terraform_version: ${{ matrix.tf_version }}

            - name: Terraform Init
              id: init
              run: terraform init

            - name: Terraform Plan
              id: plan
              if: github.event_name == 'pull_request'
              run: |
                  terraform plan \
                  -no-color -input=false -var-file=config/fixtures.tfvars
              continue-on-error: true

            - name: Terraform Format
              id: fmt
              run: terraform fmt -check

            - name: Terraform Validate
              id: validate
              run: terraform validate -no-color

            - name: Update Pull Request
              uses: actions/github-script@v6
              if: github.event_name == 'pull_request'
              env:
                  PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
                      #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                      #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
                      #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

                      <details><summary>Show Plan</summary>

                      \`\`\`\n
                      ${process.env.PLAN}
                      \`\`\`

                      </details>

                      *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: output
                      })

            - name: Terraform Plan Status
              if: steps.plan.outcome == 'failure'
              run: exit 1
