---
name: Terraform Plan for Changed Modules

on:
    push:
        paths:
            - modules/**
            - examples/**
    workflow_dispatch:
    pull_request:
        types: [opened, edited, synchronize]
        paths:
            - modules/**
            - examples/**

jobs:
    prepare_matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.build-matrix.outputs.matrix }}
        steps:
            - uses: actions/checkout@v4

            - name: Build matrix for changed modules
              id: build-matrix
              run: |
                  CHANGED_MODULES=""
                  if [ "${{ github.event_name }}" == "pull_request" ]; then
                    CHANGED_MODULES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep '^modules/' | awk -F/ '{print $2}' | uniq)
                  else
                    CHANGED_MODULES=$(git diff --name-only HEAD~1 HEAD | grep '^modules/' | awk -F/ '{print $2}' | uniq)
                  fi

                  MATRIX=""
                  for MODULE in $CHANGED_MODULES; do
                    RECIPES=$(find examples/$MODULE -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
                    for RECIPE in $RECIPES; do
                      TFVARS_FILES=$(find examples/$MODULE/$RECIPE/config -type f -name '*.tfvars' -exec basename {} \;)
                      for TFVARS in $TFVARS_FILES; do
                        MATRIX+="{\"module\":\"$MODULE\", \"recipe\":\"$RECIPE\", \"tfvars\":\"$TFVARS\"},"
                      done
                    done
                  done
                  MATRIX="[${MATRIX%,}]"
                  echo "::set-output name=matrix::$MATRIX"

    terraform_commands:
        needs: prepare_matrix
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: ${{fromJson(needs.prepare_matrix.outputs.matrix)}}

        steps:
            - uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform Init
              run: terraform init
              working-directory: examples/${{ matrix.module }}/${{ matrix.recipe }}

            - name: Terraform Validate
              run: terraform validate
              working-directory: examples/${{ matrix.module }}/${{ matrix.recipe }}

            - name: Terraform Plan
              run: terraform plan -var-file=config/${{ matrix.tfvars }}
              working-directory: examples/${{ matrix.module }}/${{ matrix.recipe }}

            - name: Comment PR with Terraform Plan Output
              if: ${{ github.event_name == 'pull_request' }}
              uses: actions/github-script@v5
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const planOutput = `Terraform Plan Output:\n${{ steps.terraform_plan.outputs.plan-output }}`;
                      const prNumber = ${{ github.event.pull_request.number }};
                      github.rest.issues.createComment({
                        issue_number: prNumber,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: planOutput
                      });
