---
name: Terraform Plan recipes

on:
    workflow_dispatch:
    push:
    pull_request:
        types: [opened, edited, synchronize]

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: us-east-1

jobs:
    plan-pr:
        name: Plan recipes on PR
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: basic
                      module: default
                      tf_version: 1.6.1

        defaults:
            run:
                working-directory: examples/${{ matrix.module }}/${{ matrix.name }}

        steps:
            - uses: actions/checkout@v3

            - uses: hashicorp/setup-terraform@v2
              with:
                  terraform_version: ${{ matrix.tf_version }}

            - name: Terraform Init on module ${{ matrix.module }}
              run: terraform init

            - name: Terraform Format
              run: terraform fmt -check

            - name: Terraform Validate
              run: terraform validate -no-color

            - name: Terraform Plan on module ${{ matrix.module }}
              run: |
                  PLAN_OUTPUT=""
                  for f in config/*.tfvars; do
                      OUTPUT=$(terraform plan -no-color -input=false -var-file="$f")
                      PLAN_OUTPUT+="$OUTPUT\n"
                  done
                  echo "::set-env name=plan_output::$PLAN_OUTPUT"

            - name: Update Pull Request
              if: github.event_name == 'pull_request'
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const planOutput = `${{ env.plan_output }}`;
                      const prNumber = context.issue.number;
                      const body = `#### Terraform Validation ðŸ¤–\n\`\`\`\n${planOutput}\n\`\`\``;
                      github.rest.issues.createComment({
                          issue_number: prNumber,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: body
                      });

            - name: Terraform Plan Status
              if: ${{ failure() }}
              run: exit 1
