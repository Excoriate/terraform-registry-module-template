---
name: Terraform CI Checks Modules

on:
    workflow_dispatch:
    push:
    pull_request:
        types: [opened, edited, synchronize]

env:
    TF_ROOT: modules

jobs:
    set_up_modules_job:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}

        steps:
            - uses: actions/checkout@v4

            - name: Set up modules matrix
              id: set-matrix
              run: |
                  MODULES=$(find ${{ env.TF_ROOT }} -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
                  MODULES_JSON=$(echo "$MODULES" | jq -R -s -c 'split("\n")[:-1]')
                  echo "::set-output name=matrix::${MODULES_JSON}"

    terraform_modules_ci:
        needs: set_up_modules_job
        runs-on: ubuntu-latest
        strategy:
            matrix:
                module: ${{fromJson(needs.set_up_modules_job.outputs.matrix)}}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform Init
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  terraform init

            - name: Terraform Fmt
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  terraform fmt -check -recursive

            - name: Terraform Validate
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  terraform validate

            - name: Validate Terraform docs file
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  if [ -f .terraform-docs.yml ]; then
                    echo "terraform-docs configuration file found"
                    cat .terraform-docs.yml
                  else
                    echo "Error: .terraform-docs.yml file not found"
                    exit 1
                  fi

            - name: Validate TFLint file
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  if [ -f .tflint.hcl ]; then
                    echo "TFLint configuration file found"
                    cat .tflint.hcl
                  else
                    echo "Error: .tflint.hcl file not found"
                    exit 1
                  fi

            - name: Check for README.md file
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  if [ -f README.md ]; then
                    echo "README.md file found"
                  else
                    echo "Error: README.md file not found"
                    exit 1
                  fi

            - name: Terraform TFLintSetup
              id: terraform-tflint-setup
              uses: terraform-linters/setup-tflint@v1
              with:
                  tflint_version: latest

            - name: TFLint Run
              id: terraform-tflint-run
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  tflint --version
                  tflint --init
                  tflint --disable-rule=terraform_module_pinned_source
                  tflint
